~version: "2.0"

# Find the body
$body: //article

# Distinguish articles from movie pages
$nav: $body/nav

?not_exists: $nav  
# Articles

# Find basic properties
$title: $body//h1[has-class("titolo")]
$subtitle: $body//p[has-class("box-dati")]
$author_node: //span[@itemprop="author"]
$author: $author_node//span[@itemprop="name"]/text()
$author_url: $author_node/a/@href
$date_node: //time[@itemprop="datePublished"]
$published_date: $date_node/@datetime
$cover: //figure[@itemprop="image"]
$related_container_art: //div[has-class("contenitore-articoli")]
$related_container_mov: //div[has-class("box-film-di-riferimento")]

# Create related articles
@append(<related>, "myid", "articles"): $body
$related_articles: $body/related[@myid="articles"]
@remove: $related_container_art//a/*
@append_to($related_articles): $related_container_art//a

# Create related movies
@append(<related>, "myid", "movies"): $body
$related_movies: $body/related[@myid="movies"]
@remove: $related_container_mov//a/*
@append_to($related_movies): $related_container_mov//a
@prepend(<h3>): $related_movies
@append("Schede di riferimento"): $related_movies/h3

# Cleanup useless elements
@remove: $body//div[has-class("box-dati")]
@remove: $body//div[has-class("tasti-social-top")]
@remove: $body//div[has-class("author")]
@remove: $body//div[has-class("box-share-tasti-sociali")]
@remove: $body//div[has-class("box-tags-articolo")]
@remove: $body//a[has-class("box-titoli-commenti-facebook")]
@remove: $body//div[has-class("box-source-link")]

# Test jwplayer support
$jwplayers: $body//iframe[contains(@src, "?idv=")]
@replace(".+/?idv=([0-9]+)", "https://video.comingsoon.it/MP4/$1.mp4"): $jwplayers/@src
@after(<video>, "src", "./@src"): $jwplayers
@remove: $jwplayers
<div>: //video/ancestor::p

?true

# TEST NESTED FIX
$problems: $body
@while( $problems ) {
  $test: $body//*[self::blockquote or self::aside or self::figure or (self::img and not(./ancestor::figure)) or self::iframe or self::slideshow or self::related or self::footer or self::table[not(ancestor::table) and not(descendant::table)]]
 
  $problems: $test/self::*[ancestor::anchor or ancestor::blockquote or ancestor::aside or ancestor::footer or ancestor::strong or ancestor::b or ancestor::em or ancestor::i or ancestor::ins or ancestor::u or ancestor::del or ancestor::s or ancestor::strike or ancestor::code or ancestor::kbd or ancestor::samp or ancestor::tt or ancestor::mark or ancestor::sup or ancestor::pic or ancestor::sub or ancestor::a or ancestor::reference or ancestor::h1 or ancestor::h2 or ancestor::h3 or ancestor::h4 or ancestor::h5 or ancestor::h6 or ancestor::p or ancestor::pre or ancestor::hr or ancestor::img or ancestor::br]
 
  @if( $problems ) {
    $parent: $problems/parent::*
    @detach: $parent/node()
    @set_attr("merge", $index): $@
    <remove>: $parent
    @after_el("./parent::*"): $problems
    @combine: $body//self::*[prev-sibling::*/@merge = @merge]
  }
}

# Set the appropriate attributes
# Enable/Disable as needed
title: $title
subtitle: $subtitle
# kicker: $kicker
author: $author
author_url: $author_url
published_date: $published_date
# description: $description
# image_url: $image_url
# document_url: $document_url
site_name: "ComingSoon.it"
# channel: "@channelname"
cover: $cover
body: $body
